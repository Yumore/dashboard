def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 31

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId "com.example.admin"
        minSdkVersion 23
        targetSdkVersion 31
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }

    packagingOptions {
        jniLibs {
            keepDebugSymbols += ['*/armeabi/*.so',
                                 '*/armeabi-v7a/*.so',
                                 '*/arm64-v8a/*.so',
                                 '*/x86/*.so',
                                 '*/x86_64/*.so',
                                 '*/mips/*.so',
                                 '*/mips64/*.so']
        }
        resources {
            excludes += ['project.properties',
                         'META-INF/LICENSE.txt',
                         'META-INF/LICENSE',
                         'META-INF/NOTICE.txt',
                         'META-INF/NOTICE',
                         'META-INF/DEPENDENCIES.txt',
                         'META-INF/DEPENDENCIES',
                         'META-INF/**/*.properties',
                         'META-INF/kotlinx_coroutines_core.version',
                         'META-INF/beans.xml']
            pickFirsts += ['META-INF/']
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
